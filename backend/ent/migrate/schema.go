// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// EntFormsColumns holds the columns for the "ent_forms" table.
	EntFormsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Default: "Default Form"},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "enabled", Type: field.TypeBool, Default: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt},
	}
	// EntFormsTable holds the schema information for the "ent_forms" table.
	EntFormsTable = &schema.Table{
		Name:       "ent_forms",
		Columns:    EntFormsColumns,
		PrimaryKey: []*schema.Column{EntFormsColumns[0]},
	}
	// EntFormQuestionsColumns holds the columns for the "ent_form_questions" table.
	EntFormQuestionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString, Default: "Untitled"},
		{Name: "label", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"short_text", "paragraph", "multi_choice", "multi_response", "dropdown", "file", "linear_scale", "date", "time"}},
		{Name: "required", Type: field.TypeBool, Default: false},
		{Name: "extra_data", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "ent_form_questions", Type: field.TypeInt, Nullable: true},
	}
	// EntFormQuestionsTable holds the schema information for the "ent_form_questions" table.
	EntFormQuestionsTable = &schema.Table{
		Name:       "ent_form_questions",
		Columns:    EntFormQuestionsColumns,
		PrimaryKey: []*schema.Column{EntFormQuestionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ent_form_questions_ent_forms_questions",
				Columns:    []*schema.Column{EntFormQuestionsColumns[9]},
				RefColumns: []*schema.Column{EntFormsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// FormInstancesColumns holds the columns for the "form_instances" table.
	FormInstancesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"submiited", "pending"}, Default: "pending"},
		{Name: "form_spec_form_instances", Type: field.TypeInt, Nullable: true},
		{Name: "user_form_instances", Type: field.TypeInt, Nullable: true},
	}
	// FormInstancesTable holds the schema information for the "form_instances" table.
	FormInstancesTable = &schema.Table{
		Name:       "form_instances",
		Columns:    FormInstancesColumns,
		PrimaryKey: []*schema.Column{FormInstancesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "form_instances_form_specs_form_instances",
				Columns:    []*schema.Column{FormInstancesColumns[2]},
				RefColumns: []*schema.Column{FormSpecsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "form_instances_users_form_instances",
				Columns:    []*schema.Column{FormInstancesColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// FormSpecsColumns holds the columns for the "form_specs" table.
	FormSpecsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Default: "Default Form"},
		{Name: "cover", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Default: "This is a new form"},
		{Name: "is_template", Type: field.TypeBool, Default: false},
		{Name: "enabled", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "user_form_specs", Type: field.TypeInt, Nullable: true},
	}
	// FormSpecsTable holds the schema information for the "form_specs" table.
	FormSpecsTable = &schema.Table{
		Name:       "form_specs",
		Columns:    FormSpecsColumns,
		PrimaryKey: []*schema.Column{FormSpecsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "form_specs_users_form_specs",
				Columns:    []*schema.Column{FormSpecsColumns[9]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// QuestionsColumns holds the columns for the "questions" table.
	QuestionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "label", Type: field.TypeString},
		{Name: "title", Type: field.TypeString, Default: "default title"},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"short_text", "paragraph", "multi_choice", "checkboxes", "drop_down", "file", "linear_scale", "date", "time"}},
		{Name: "required", Type: field.TypeBool},
		{Name: "extra_data", Type: field.TypeString, Default: ""},
		{Name: "rule", Type: field.TypeString, Default: ""},
		{Name: "dependencies", Type: field.TypeString, Default: "[]"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "question_group_question", Type: field.TypeInt, Nullable: true},
	}
	// QuestionsTable holds the schema information for the "questions" table.
	QuestionsTable = &schema.Table{
		Name:       "questions",
		Columns:    QuestionsColumns,
		PrimaryKey: []*schema.Column{QuestionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "questions_question_groups_question",
				Columns:    []*schema.Column{QuestionsColumns[11]},
				RefColumns: []*schema.Column{QuestionGroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// QuestionGroupsColumns holds the columns for the "question_groups" table.
	QuestionGroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "form_spec_question_groups", Type: field.TypeInt, Nullable: true},
	}
	// QuestionGroupsTable holds the schema information for the "question_groups" table.
	QuestionGroupsTable = &schema.Table{
		Name:       "question_groups",
		Columns:    QuestionGroupsColumns,
		PrimaryKey: []*schema.Column{QuestionGroupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "question_groups_form_specs_question_groups",
				Columns:    []*schema.Column{QuestionGroupsColumns[5]},
				RefColumns: []*schema.Column{FormSpecsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// QuestionResponsesColumns holds the columns for the "question_responses" table.
	QuestionResponsesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "label", Type: field.TypeString},
		{Name: "value", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "form_instance_question_response", Type: field.TypeInt, Nullable: true},
		{Name: "question_question_response", Type: field.TypeInt, Nullable: true},
	}
	// QuestionResponsesTable holds the schema information for the "question_responses" table.
	QuestionResponsesTable = &schema.Table{
		Name:       "question_responses",
		Columns:    QuestionResponsesColumns,
		PrimaryKey: []*schema.Column{QuestionResponsesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "question_responses_form_instances_question_response",
				Columns:    []*schema.Column{QuestionResponsesColumns[5]},
				RefColumns: []*schema.Column{FormInstancesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "question_responses_questions_question_response",
				Columns:    []*schema.Column{QuestionResponsesColumns[6]},
				RefColumns: []*schema.Column{QuestionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "email", Type: field.TypeString, Default: ""},
		{Name: "password", Type: field.TypeString, Default: ""},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"business_admin", "business_user"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		EntFormsTable,
		EntFormQuestionsTable,
		FormInstancesTable,
		FormSpecsTable,
		QuestionsTable,
		QuestionGroupsTable,
		QuestionResponsesTable,
		UsersTable,
	}
)

func init() {
	EntFormQuestionsTable.ForeignKeys[0].RefTable = EntFormsTable
	FormInstancesTable.ForeignKeys[0].RefTable = FormSpecsTable
	FormInstancesTable.ForeignKeys[1].RefTable = UsersTable
	FormSpecsTable.ForeignKeys[0].RefTable = UsersTable
	QuestionsTable.ForeignKeys[0].RefTable = QuestionGroupsTable
	QuestionGroupsTable.ForeignKeys[0].RefTable = FormSpecsTable
	QuestionResponsesTable.ForeignKeys[0].RefTable = FormInstancesTable
	QuestionResponsesTable.ForeignKeys[1].RefTable = QuestionsTable
}
